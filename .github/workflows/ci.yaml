name:  CI Prediction Model

on:
  push:
    branches:
      - develop

permissions:
  contents: read
  id-token: write

jobs:
  experiment:
    runs-on: ubuntu-latest # Only use ubuntu-latest 
    strategy:
      matrix:
        python-version: ["3.9"]  # Only Python 3.9

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Read kaggle.json file 
      run: |
        echo ${{ secrets.ENV_FILE }} | base64 --decode > .env
        echo ${{ env.USERNAME }}:${{ env.KAGGLE_KEY }} | base64 --encode > assets/kaggle.json
        chmod 600 assets/kaggle.json 

    - name: Set up DVC
      uses: iterative/setup-dvc@v1 # Use this to set up DVC
    
    - name: Configure DVC Remote
      run: |
        dvc remote add -d gdrive dvc://?token=${{ env.DRIVE_URL }}
        dvc remote default gdrive

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # - name: Set python path  
    #   run: |
    #     # Get the current working directory (PWD)
    #     current_dir=$(pwd)
    #     echo "PYTHONPATH=\$PYTHONPATH:$current_dir" >> $GITHUB_ENV

    - name: Run Project Scripts
      run: |
        dvc pull
        python template.py
        chmod 600 assets/kaggle.json 
        dvc repro
        dvc push
    
    - name: Generate CML Report
      env:
        REPO_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "## Reproduce Results" >> report.md
        echo "Use this parameters compination" >> report.md
        dvc metrics diff main 
        cat "artifacts/classification_report.txt" >> report.md
        echo "![](./artifacts/confusion_matrix.png)" >> report.md
        echo "![](./artifacts/auc_plot.png)" >> report.md
        echo "![](./artifacts/pr_curve.png)" >> report.md
        cml comment create report.md 