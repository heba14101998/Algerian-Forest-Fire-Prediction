name: Continous Integration for Prediction Model

on:
  push:
    branches:
      - develop

permissions:
  contents: read
  id-token: write

jobs:
  experiment:
    runs-on: ubuntu-latest # Only use ubuntu-latest 
    strategy:
      matrix:
        python-version: ["3.9"]  # Only Python 3.9

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Poetry and dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/.cache/pip
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install --no-dev

    - name: Set up DVC
      uses: iterative/setup-dvc@v1 # Use this to set up DVC

    - name: Run Project Scripts
      run: |
        python template.py
        dvc repro
        # dvc push # If needed (use a remote)

    - name: Generate CML Report
      env:
        REPO_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "## Reproduce Results" >> report.md
        echo "Use this parameters compination" >> report.md
        dvc metrics diff main 
        cat "artifacts/classification_report.txt" >> report.md
        echo "![](./artifacts/confusion_matrix.png)" >> report.md
        echo "![](./artifacts/auc_plot.png)" >> report.md
        echo "![](./artifacts/pr_curve.png)" >> report.md
        cml comment create report.md 