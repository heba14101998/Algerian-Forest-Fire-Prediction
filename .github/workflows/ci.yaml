name: CI Prediction Model

on:
  # workflow_dispatch:
  push:
    branches:
  #     - develop
  #   paths:
  #     - src/**
  # pull_request:
  #   branches:
  #     - develop
  #   paths:
  #     - src/**

permissions: write-all
  # contents: read
  # id-token: write
jobs:
  experiment:
    environment: env
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: "3.9"  
  
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - uses: iterative/setup-cml@v1
    - uses: iterative/setup-dvc@v1

    # - name: Create Conda environment
    #   uses: conda-incubator/setup-miniconda@v3
    #   with:
    #     miniconda-version: 'latest'

    - name: Create Kaggle Authentication Token file
      run: |
        mkdir -p ~/.kaggle
        echo ${{ secrets.KAGGLE_TOKEN_BASE64 }} | base64 --decode > ~/.kaggle/kaggle.json
        sudo chmod 600 ~/.kaggle/kaggle.json
        ls -al ~/.kaggle/kaggle.json
        
    - name: Configure DVC Cache
      run: |
        # sudo usermod -aG dvcusers $(whoami)
        sudo chmod 770 /home/shared/dvc-cache
        ls -ld /home/shared/dvc-cache
    
    - name: Configure GDrive Remote
      run: |
        echo ${{ secrets.SERVICE_ACCOUNT_TOKEN_BASE64 }} | base64 --decode > service-account-token.json
        echo ${{ secrets.DRIVE_URL }}
        dvc remote add --default gdrive gdrive://${{ secrets.DRIVE_URL }}
        dvc remote modify gdrive gdrive_use_service_account true
        dvc remote modify gdrive --local gdrive_service_account_json_file_path service-account-token.json

    # - name: Setup Miniconda
    #   uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     miniconda-version: 'latest'
    #     activate-environment: test
    #     auto-activate-base: true
    #     auto-update-conda: false
    #     remove-profiles: true
    #     architecture: x64
    #     clean-patched-environment-file: true
    #     run-post: true

    - name: Install dependencies
      run: |        
        export PYTHONPATH=$PWD/src
        python -m pip install --upgrade pip
        pip install --upgrade setuptools
        pip install -r requirements.txt
        python setup.py sdist bdist_wheel
        pip install -e . 

    - name: Run Project Scripts
      run: |
        python template.py
        # dvc pull data 
        dvc repro
        # dvc cache dir $PWD/.dvc/cache
        # sudo chmod -R a+rwx $PWD/.dvc/cache
        dvc push
        
    # - name: tests
    #   run: pytest

    - name: Generate CML Report
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # npm install -g @dvcorg/cml
        echo "## Reproduce Results" >> report.md
        echo "Use this parameters combination" >> report.md
        # dvc metrics diff main >> report.md
        cat artifacts/classification_report.txt >> report.md
        echo "![](./artifacts/confusion_matrix.png)" >> report.md
        echo "![](./artifacts/auc_plot.png)" >> report.md
        echo "![](./artifacts/pr_curve.png)" >> report.md
        cml comment create report.md 